name: 'mvnReleasePaul'
run-name: "release -> version: ${{ inputs.version }}, next-snapshot: ${{ inputs.next-snapshot }}"
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'release version: ex: 0.0.1'
        required: true
        type: string
        default: 'default'
      next-snapshot:
        description: 'next snapshot version: ex: 0.0.1-SNAPSHOT'
        required: true
        type: string
        default: 'default'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  mvn-release:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'adopt'

      - name: 'use the github cache for the local mvn repo'
        id: cache
        uses: actions/cache@v4.2.0
        with:
          path: ~/.m2/repository
          key: localM2Repo
          restore-keys: |
            localM2Repo

      - name: 'do the mv release and the git stuff'
        id: release
        run: |
          
          git config --global user.email "noreply-actions@github.com"
          git config --global user.name "Github Actions"
          
          chmod +x *.sh
          
          version=${{ inputs.version }}
          if [ "${{ inputs.version }}" == "default" ]; then
            version=$(./get-release.sh)
          fi
          echo "version=${version}" >> $GITHUB_ENV
          
          mvn versions:set -DnewVersion="${version}"
          mvn versions:commit
          
          echo "commit -> release version: ${version} [skip-ci]"
          git add .
          git commit -m "release version: ${version} [skip-ci]"
          git tag ${version}
          
          mvn deploy
          
          nextsnapshot=${{ inputs.next-snapshot }}
          if [ "${{ inputs.next-snapshot }}" == "default" ]; then
            nextsnapshot=$(./get-next-snapshot.sh)
          fi
          echo "nextsnapshot=${nextsnapshot}" >> $GITHUB_ENV
          
          mvn versions:set -DnewVersion="${nextsnapshot}"
          mvn versions:commit
          
          echo "commit -> next snapshot: ${nextsnapshot} [skip-ci]"
          git add .
          git commit -m "next snapshot: ${nextsnapshot} [skip-ci]"
          
          git push --tags
          git push

        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'lets us kick the github release action'
        id: gh-release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ env.version }}
          name: Release ${{ env.version }}

      - name: 'docker: log in to the container registry'
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'extract metadata (tags, labels) for Docker'
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ env.version }}
            latest

      - name: 'Build and push Docker image'
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
